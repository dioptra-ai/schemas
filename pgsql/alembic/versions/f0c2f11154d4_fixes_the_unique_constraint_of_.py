"""fixes the unique constraint of prediction.model_name,datapoint

Created at: 2023-03-13 17:23:58.309565
"""

revision = 'f0c2f11154d4'
# To prune migrations prior to this one, set this down_revision to None
# and delete the files of the prior revisions.
down_revision = '373158450074'

from alembic import op
import sqlalchemy as sa

from alembic import context

def upgrade():
    schema_upgrades()
    data_upgrades()

def downgrade():
    data_downgrades()
    schema_downgrades()

def schema_upgrades():
    # ### commands auto generated by Alembic - please adjust! ###
    # For each datapoint, delete the predictions with model_name = NULL that are in excess of 1
    op.execute("""
        DELETE FROM predictions
        WHERE id IN (
            SELECT id
            FROM (
                SELECT id, ROW_NUMBER() OVER (PARTITION BY datapoint ORDER BY created_at) AS row_number
                FROM predictions
                WHERE model_name IS NULL
            ) AS t
            WHERE t.row_number > 1
        )
    """)
    op.execute("UPDATE predictions SET model_name = '' WHERE model_name IS NULL")
    op.alter_column('predictions', 'model_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('predictions', 'model_name', server_default='')
    # ### end Alembic commands ###

def schema_downgrades():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('predictions', 'model_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###

def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass

def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass