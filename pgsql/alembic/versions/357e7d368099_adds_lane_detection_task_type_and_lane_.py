"""Adds LANE_DETECTION task type and lane object

Created at: 2023-04-20 13:52:58.892266
"""

revision = '357e7d368099'
# To prune migrations prior to this one, set this down_revision to None
# and delete the files of the prior revisions.
down_revision = '5ce4e857119b'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from alembic import context

def upgrade():
    schema_upgrades()
    data_upgrades()

def downgrade():
    data_downgrades()
    schema_downgrades()

def schema_upgrades():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lanes',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('organization_id', sa.String(), nullable=False),
    sa.Column('prediction', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('groundtruth', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('coco_polyline', postgresql.ARRAY(sa.Float()), nullable=True),
    sa.CheckConstraint('groundtruth IS NULL OR groundtruth IS NOT NULL AND confidence IS NULL', name=op.f('ck_lanes_`lanes_groundtruth_confidence_null`')),
    sa.CheckConstraint('prediction IS NULL AND groundtruth IS NOT NULL OR prediction IS NOT NULL AND groundtruth IS NULL', name=op.f('ck_lanes_`lanes_prediction_xor_groundtruth_not_null`')),
    sa.ForeignKeyConstraint(['groundtruth'], ['groundtruths.id'], name=op.f('fk_lanes_groundtruth_groundtruths'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['prediction'], ['predictions.id'], name=op.f('fk_lanes_prediction_predictions'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_lanes'))
    )
    op.create_index('lanes_confidence_index', 'lanes', ['confidence'], unique=False)
    op.create_index('lanes_groundtruth_index', 'lanes', ['groundtruth'], unique=False)
    op.create_index('lanes_organization_id_index', 'lanes', ['organization_id'], unique=False)
    op.create_index('lanes_prediction_index', 'lanes', ['prediction'], unique=False)
    # ### end Alembic commands ###
    # Add LANE_DETECTION value to enum tasktype
    op.execute('ALTER TYPE tasktype ADD VALUE IF NOT EXISTS \'LANE_DETECTION\';')

def schema_downgrades():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('lanes_prediction_index', table_name='lanes')
    op.drop_index('lanes_organization_id_index', table_name='lanes')
    op.drop_index('lanes_groundtruth_index', table_name='lanes')
    op.drop_index('lanes_confidence_index', table_name='lanes')
    op.drop_table('lanes')
    # ### end Alembic commands ###

def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass

def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass