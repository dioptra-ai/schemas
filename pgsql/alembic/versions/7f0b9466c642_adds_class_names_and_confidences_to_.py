"""adds class_names and confidences to predictions, adds request_id back to datapoint

Created at: 2023-02-01 14:24:35.126921
"""

revision = '7f0b9466c642'
# To prune migrations prior to this one, set this down_revision to None
# and delete the files of the prior revisions.
down_revision = '632b3332aeeb'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from alembic import context

def upgrade():
    schema_upgrades()
    data_upgrades()

def downgrade():
    data_downgrades()
    schema_downgrades()

def schema_upgrades():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('datapoints', sa.Column('request_id', sa.String(), nullable=True))
    op.drop_constraint('feature_vectors_datapoint_model_name_unique', 'feature_vectors', type_='unique')
    op.create_unique_constraint('feature_vectors_datapoint_model_name_unique', 'feature_vectors', ['datapoint', 'model_name', 'name'])
    op.drop_constraint('feature_vectors_prediction_model_name_unique', 'feature_vectors', type_='unique')
    op.create_unique_constraint('feature_vectors_prediction_model_name_unique', 'feature_vectors', ['prediction', 'model_name', 'name'])
    op.add_column('groundtruths', sa.Column('class_name', sa.String(), nullable=True))
    op.add_column('groundtruths', sa.Column('top', sa.Float(), nullable=True))
    op.add_column('groundtruths', sa.Column('left', sa.Float(), nullable=True))
    op.add_column('groundtruths', sa.Column('height', sa.Float(), nullable=True))
    op.add_column('groundtruths', sa.Column('width', sa.Float(), nullable=True))
    op.add_column('groundtruths', sa.Column('metrics', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('predictions', sa.Column('class_name', sa.String(), nullable=True))
    op.add_column('predictions', sa.Column('class_names', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('predictions', sa.Column('confidence', sa.Float(), nullable=True))
    op.add_column('predictions', sa.Column('confidences', postgresql.ARRAY(sa.Float()), nullable=True))
    op.add_column('predictions', sa.Column('top', sa.Float(), nullable=True))
    op.add_column('predictions', sa.Column('left', sa.Float(), nullable=True))
    op.add_column('predictions', sa.Column('height', sa.Float(), nullable=True))
    op.add_column('predictions', sa.Column('width', sa.Float(), nullable=True))
    op.add_column('predictions', sa.Column('metrics', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    # ### end Alembic commands ###

def schema_downgrades():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('predictions', 'metrics')
    op.drop_column('predictions', 'width')
    op.drop_column('predictions', 'height')
    op.drop_column('predictions', 'left')
    op.drop_column('predictions', 'top')
    op.drop_column('predictions', 'confidences')
    op.drop_column('predictions', 'confidence')
    op.drop_column('predictions', 'class_names')
    op.drop_column('predictions', 'class_name')
    op.drop_column('groundtruths', 'metrics')
    op.drop_column('groundtruths', 'width')
    op.drop_column('groundtruths', 'height')
    op.drop_column('groundtruths', 'left')
    op.drop_column('groundtruths', 'top')
    op.drop_column('groundtruths', 'class_name')
    op.drop_constraint('feature_vectors_prediction_model_name_unique', 'feature_vectors', type_='unique')
    op.create_unique_constraint('feature_vectors_prediction_model_name_unique', 'feature_vectors', ['prediction', 'model_name'])
    op.drop_constraint('feature_vectors_datapoint_model_name_unique', 'feature_vectors', type_='unique')
    op.create_unique_constraint('feature_vectors_datapoint_model_name_unique', 'feature_vectors', ['datapoint', 'model_name'])
    op.drop_column('datapoints', 'request_id')
    # ### end Alembic commands ###

def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass

def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass